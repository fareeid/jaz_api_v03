"""motor certs table

Revision ID: 064972b3741a
Revises: 99dc177f9c19
Create Date: 2024-09-07 12:16:49.547570

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '064972b3741a'
down_revision: Union[str, None] = '99dc177f9c19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proposalmotorcert',
    sa.Column('motor_cert_sys_id', sa.Integer(), nullable=False),
    sa.Column('motor_cert_sr_no', sa.Integer(), nullable=False),
    sa.Column('prai_flexi', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('prai_sys_id', sa.Integer(), nullable=True),
    sa.Column('prai_risk_lvl_no', sa.Integer(), nullable=True),
    sa.Column('prai_risk_id', sa.Integer(), nullable=True),
    sa.Column('prai_pol_sys_id', sa.Integer(), nullable=True),
    sa.Column('prai_end_no_idx', sa.Integer(), nullable=True),
    sa.Column('motor_cert_risk_sys_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['motor_cert_risk_sys_id'], ['proposalrisk.risk_sys_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('motor_cert_sys_id')
    )
    op.create_index(op.f('ix_proposalmotorcert_motor_cert_sys_id'), 'proposalmotorcert', ['motor_cert_sys_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_proposalmotorcert_motor_cert_sys_id'), table_name='proposalmotorcert')
    op.drop_table('proposalmotorcert')
    # ### end Alembic commands ###
